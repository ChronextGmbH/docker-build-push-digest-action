name: Build and Publish Docker Images

on:
  workflow_call:
    inputs:
      dockerfile:
        type: string
        description: "Path to the Dockerfile"
        required: false
        default: "Dockerfile"
      context:
        type: string
        description: "Path to the build context"
        required: false
        default: "."
      name:
        type: string
        description: "Name of the image (without registry and repository)"
        required: false
        default: ""

env:
  REGISTRY: ghcr.io

jobs:
  build-images:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: amd64
            runner: ubuntu-latest
          - name: arm64
            runner: ubuntu-arm64
    runs-on: ${{ matrix.platform.runner }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set image name to lowercase
        run: |
          IMAGE_NAME=$(echo "${{ env.REGISTRY }}/${{ github.repository }}${{ inputs.name }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: ChronextGmbH/docker-build-push-digest-action@main
        with:
          image-name: ${{ env.IMAGE_NAME }}
          platform: ${{ matrix.platform.name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ inputs.dockerfile }}
          context: ${{ inputs.context }}

  merge-digests:
    runs-on: ubuntu-latest
    needs: build-images
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Set image name to lowercase
        run: |
          IMAGE_NAME=$(echo "${{ env.REGISTRY }}/${{ github.repository }}${{ inputs.name }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4.1.8
        with:
          path: /tmp/digests/${{ env.IMAGE_NAME }}
          pattern: digests-*
          merge-multiple: true

      - name: Log in to the container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Create manifest list and push
        working-directory: /tmp/digests/${{ env.IMAGE_NAME }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
